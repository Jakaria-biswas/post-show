[{"C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\index.js":"1","C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\App.js":"2","C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\Components\\Home\\Home.js":"4","C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\Components\\Post\\Post.js":"5","C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\Components\\NotMatch\\NotMatch.js":"6","C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\Components\\ShowPost\\ShowPost.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":935,"mtime":1611482584400,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":609,"mtime":1611481072669,"results":"12","hashOfConfig":"9"},{"size":2010,"mtime":1611996983397,"results":"13","hashOfConfig":"9"},{"size":184,"mtime":1611482143401,"results":"14","hashOfConfig":"9"},{"size":3076,"mtime":1611825951950,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1harj0m",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\index.js",[],["34","35"],"C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\App.js",["36"],"import React from 'react'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './Components/Home/Home';\nimport NotMatch from './Components/NotMatch/NotMatch';\nimport ShowPost from './Components/ShowPost/ShowPost';\n\nfunction App() {\n  return (\n    <div>\n          <Router>\n               <Switch>\n                     <Route path=\"/home\">\n                         <Home></Home>\n                     </Route>\n                       <Route path=\"/about/:postId\">\n                           <ShowPost></ShowPost>\n                       </Route>\n                      <Route exact path=\"/\">\n                            <Home></Home>\n                      </Route>\n                      <Route path=\"*\">\n                          <NotMatch></NotMatch>\n                      </Route>\n               </Switch>\n          </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\Components\\Home\\Home.js",[],"C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\Components\\Post\\Post.js",["37","38"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport './Post.css';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Post = (props) => {\r\n      const {id,title} = props.post;\r\n      const history = useHistory();\r\n      const handleButton = (id) => {\r\n              let toGo = `/about/${id}`\r\n              history.push(toGo)\r\n      }   \r\n          \r\n              const [like, setLike] = useState('');\r\n              const likeColorAdd = () =>{\r\n                       \r\n                         \r\n                         const test = like ? '' :  'primary'\r\n                         setLike(test)\r\n              }\r\n        \r\n    return (\r\n        <div className=\"main\">\r\n                 \r\n            <Card className = \"rootCard\">\r\n                     \r\n                  <CardContent>\r\n                        <Typography className=\"idStyle\" variant=\"body\"  component=\"h4\">\r\n                             post no :  {id}\r\n                        </Typography>\r\n                        <Typography className=\"cardTitle\" color=\"textSecondary\" variant=\"body\" component=\"p\">\r\n                               {title}\r\n                        </Typography>\r\n                  </CardContent>\r\n                   <CardActions>\r\n                          <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => handleButton(id)}> \r\n                               {/* <Link to={`/about/${id}`}>more detail</Link>? */}\r\n                               {/* <button onClick={() => handleButton(id)}>more detail</button> */}\r\n                               more detail\r\n                          </Button>\r\n                   </CardActions>\r\n            </Card>\r\n           <br/>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\Components\\NotMatch\\NotMatch.js",[],"C:\\Users\\Jakaria\\Desktop\\project\\React-JS\\post-show\\my-app\\src\\Components\\ShowPost\\ShowPost.js",["39","40"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './ShowPost.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ShowPost = () => {\r\n    const {postId} = useParams();\r\n    const [postDetail, setPostDetail] = useState({});\r\n    const [comments, setComments] = useState({});\r\n    const [randomUser, setRandomUser] = useState([]);\r\n    let  single = randomUser.slice(0, 1)\r\n    \r\n     useEffect(()=>{\r\n              const url =  `https://jsonplaceholder.typicode.com/posts/${postId}`\r\n              fetch(url)\r\n              .then(res => res.json())\r\n              .then(data => setPostDetail(data))\r\n\r\n              const commentFind = `https://jsonplaceholder.typicode.com/comments/${postId}`\r\n              fetch(commentFind)\r\n              .then(res => res.json())\r\n              .then(commentLoad => setComments(commentLoad));\r\n\r\n\r\n\r\n              // random user picture \r\n\r\n              fetch('https://randomuser.me/api/?results=100')\r\n              .then(res => res.json())\r\n              .then(data  => {\r\n                      let  allInformation = data.results;\r\n                      setRandomUser(allInformation)\r\n              })\r\n\r\n             \r\n     },[])\r\n    return (\r\n        <div>\r\n              \r\n                <Card>\r\n                       <CardContent>\r\n                                  <Typography style={{'paddingBottom' : '15px'}} color=\"textSecondary\" variant=\"body\" component=\"h4\">\r\n                                   post no : {postId}\r\n                                   </Typography>\r\n                                   <Typography variant=\"body\" component=\"h5\">\r\n                                              {postDetail.title}\r\n                                   </Typography>\r\n                                    <Typography variant=\"body\" className=\"postBody\" component=\"p\" >\r\n                                             {postDetail.body}\r\n                                    </Typography>\r\n                                   <br/>\r\n                                    <hr/>\r\n                                          <div className=\"commentSection\">\r\n                                                   <div className=\"commentImg\">\r\n                                             \r\n                                                    { single.map(random => <img title={comments.email} src={random.picture.large}></img>)}\r\n                                                       \r\n                                                   </div>\r\n                                                   <div className=\"commentText\">\r\n                                                         <p title=\"comment\">{comments.body}</p>\r\n                                                   </div>\r\n                                          </div>\r\n                       </CardContent>\r\n                </Card>\r\n               \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShowPost;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":7,"column":3,"nodeType":"47","messageId":"48","endLine":7,"endColumn":7},{"ruleId":"45","severity":1,"message":"46","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":19,"column":21,"nodeType":"47","messageId":"48","endLine":19,"endColumn":33},{"ruleId":"50","severity":1,"message":"51","line":38,"column":8,"nodeType":"52","endLine":38,"endColumn":10,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":58,"column":76,"nodeType":"56","endLine":58,"endColumn":131},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'likeColorAdd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.","ArrayExpression",["59"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [postId]",{"range":"62","text":"63"},[1345,1347],"[postId]"]